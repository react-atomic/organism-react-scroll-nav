{
  "version": "1.5.1",
  "name": "organism-react-scroll-nav",
  "repository": {
    "type": "git",
    "url": "https://github.com/react-atomic/organism-react-scroll-nav"
  },
  "description": "A React scroll spy library with flux",
  "keywords": [
    "react",
    "react-component",
    "organism",
    "atomic-ui"
  ],
  "author": "Hill <hill@kimo.com>",
  "license": "MIT",
  "dependencies": {
    "get-random-id": "*",
    "anchor-lib": "*",
    "call-func": "*",
    "css-query-selector": "*",
    "get-object-value": "*",
    "get-scroll-info": "*",
    "get-window-offset": "*",
    "getoffset": "*",
    "react-atomic-molecule": "*",
    "reshow-hooks": "*",
    "reshow-return": "*",
    "reshow-runtime": "*",
    "smooth-scroll-to": "*"
  },
  "devDependencies": {
    "react": "^19.x",
    "react-atomic-organism": "*",
    "react-dom": "^19.x",
    "reshow-app": "*"
  },
  "exports": {
    "types": "./types/index.d.ts",
    "require": "./build/cjs/src/index.js",
    "import": "./build/es/src/index.mjs"
  },
  "types": "./types/index.d.ts",
  "main": "./build/cjs/src/index.js",
  "module": "./build/es/src/index.mjs",
  "scripts": {
    "update-compile-sh": "yo reshow:compile-sh",
    "webpack": "webpack",
    "start": "ws",
    "format": "prettier-eslint --write 'src/**/*.js' 'ui/**/*.js*'",
    "clean:webpack": "find ./assets -name '*.*' | xargs rm -rf && rm -rf workbox-*.js",
    "clean": "find ./build ./types -name '*.*' | xargs rm -rf",
    "build:cjs": "BABEL_ENV=cjs babel src -d build/cjs/src --ignore /**/__tests__",
    "build:es": "BABEL_ENV=es babel src -d build/es/src --out-file-extension .mjs",
    "build:type": "npx -p typescript tsc src/*.js src/**/*.js src/ui/**/*.jsx --jsx react-jsx --declaration --allowJs --emitDeclarationOnly --skipLibCheck --declarationDir types",
    "build": "npm run clean && npm run build:cjs && npm run build:es && npm run build:type",
    "mochaFor": "mocha -r global-jsdom/register",
    "mocha": "npm run mochaFor -- 'build/es/**/__tests__/*.mjs'",
    "test:report": "npm run build && npm run mochaFor -- --reporter mocha-junit-reporter --reporter-options mochaFile=./test_output/mocha.xml 'build/es/**/__tests__/*.mjs'",
    "test": "npm run build && npm run mocha",
    "prepublishOnly": "npm run test"
  },
  "files": [
    "types",
    "build",
    "package.json",
    "README.md"
  ]
}
